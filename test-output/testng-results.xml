<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="7" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-11-04T13:24:43 EET" name="Suite" finished-at="2021-11-04T13:24:50 EET" duration-ms="6174">
    <groups>
    </groups>
    <test started-at="2021-11-04T13:24:43 EET" name="Test" finished-at="2021-11-04T13:24:50 EET" duration-ms="6174">
      <class name="tests.Commercail.ServiceCategory.ServiceCategoryTest">
        <test-method signature="CreateServiceCategory()[pri:0, instance:tests.Commercail.ServiceCategory.ServiceCategoryTest@4d9e68d0]" started-at="2021-11-04T13:24:46 EET" name="CreateServiceCategory" finished-at="2021-11-04T13:24:50 EET" duration-ms="3411" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Input must be set]]>
            </message>
            <full-stacktrace>
                <![CDATA[java.lang.IllegalArgumentException: Input must be set
at org.openqa.selenium.internal.Require.nonNull(Require.java:56)
at org.openqa.selenium.support.ui.FluentWait.<init>(FluentWait.java:97)
at org.openqa.selenium.support.ui.WebDriverWait.<init>(WebDriverWait.java:128)
at org.openqa.selenium.support.ui.WebDriverWait.<init>(WebDriverWait.java:61)
at org.openqa.selenium.support.ui.WebDriverWait.<init>(WebDriverWait.java:48)
at pages.Commercial.ServiceCategory.ServiceCategoryPage.Active(ServiceCategoryPage.java:63)
at tests.Commercail.ServiceCategory.ServiceCategoryTest.CreateServiceCategory(ServiceCategoryTest.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateServiceCategory -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.Commercail.ServiceCategory.ServiceCategoryTest@4d9e68d0]" started-at="2021-11-04T13:24:50 EET" name="screenshotOnFailure" finished-at="2021-11-04T13:24:50 EET" duration-ms="90" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CreateServiceCategory status=FAILURE method=ServiceCategoryTest.CreateServiceCategory()[pri:0, instance:tests.Commercail.ServiceCategory.ServiceCategoryTest@4d9e68d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- tests.Commercail.ServiceCategory.ServiceCategoryTest -->
      <class name="tests.Commercail.CommercailHome.UserLoginTest">
        <test-method is-config="true" signature="startDriver(java.lang.String)[pri:0, instance:tests.Commercail.CommercailHome.UserLoginTest@795cd85e]" started-at="2021-11-04T13:24:36 EET" name="startDriver" finished-at="2021-11-04T13:24:43 EET" duration-ms="7252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method signature="UserCanLoginSuccessfuly()[pri:0, instance:tests.Commercail.CommercailHome.UserLoginTest@795cd85e]" started-at="2021-11-04T13:24:44 EET" name="UserCanLoginSuccessfuly" finished-at="2021-11-04T13:24:46 EET" duration-ms="2403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanLoginSuccessfuly -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.Commercail.CommercailHome.UserLoginTest@795cd85e]" started-at="2021-11-04T13:24:46 EET" name="screenshotOnFailure" finished-at="2021-11-04T13:24:46 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanLoginSuccessfuly status=SUCCESS method=UserLoginTest.UserCanLoginSuccessfuly()[pri:0, instance:tests.Commercail.CommercailHome.UserLoginTest@795cd85e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method is-config="true" signature="stopDriver()[pri:0, instance:tests.Commercail.CommercailHome.UserLoginTest@795cd85e]" started-at="2021-11-04T13:24:50 EET" name="stopDriver" finished-at="2021-11-04T13:24:50 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- tests.Commercail.CommercailHome.UserLoginTest -->
      <class name="tests.Commercail.CommercailHome.UserLoginTest2">
        <test-method signature="UserCanLoginSuccessfuly()[pri:0, instance:tests.Commercail.CommercailHome.UserLoginTest2@1d9b7cce]" started-at="2021-11-04T13:24:46 EET" name="UserCanLoginSuccessfuly" finished-at="2021-11-04T13:24:46 EET" duration-ms="235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanLoginSuccessfuly -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.Commercail.CommercailHome.UserLoginTest2@1d9b7cce]" started-at="2021-11-04T13:24:46 EET" name="screenshotOnFailure" finished-at="2021-11-04T13:24:46 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanLoginSuccessfuly status=SUCCESS method=UserLoginTest2.UserCanLoginSuccessfuly()[pri:0, instance:tests.Commercail.CommercailHome.UserLoginTest2@1d9b7cce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- tests.Commercail.CommercailHome.UserLoginTest2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
